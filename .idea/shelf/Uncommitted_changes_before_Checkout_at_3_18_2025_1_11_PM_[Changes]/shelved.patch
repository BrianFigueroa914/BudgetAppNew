Index: app/src/main/java/com/example/budgetapp/register.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.budgetapp;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.InputType;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\n\r\npublic class register extends AppCompatActivity {\r\n    //global variables\r\n    private boolean passwordShowing = false;\r\n    private boolean confirmPasswordShowing = false;\r\n\r\n    public static int MAX_USER_CHARS = 50;\r\n    public static int MAX_EMAIL_CHARS = 50;\r\n    public static int MAX_PHONENUMBER_CHARS = 10;\r\n    public static int MIN_PASSWORD_CHARS = 16; //8 chars each for password and confirmPassword\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_register);\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.registrationPage), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        //variables\r\n        final EditText username = findViewById(R.id.username);\r\n        final EditText email = findViewById(R.id.email);\r\n        final EditText password = findViewById(R.id.password);\r\n        final EditText confirmPassword = findViewById(R.id.confirmPassword);\r\n        final ImageView showPassword = findViewById(R.id.showPasswordIcon);\r\n        final ImageView secondShowPassword = findViewById(R.id.secondShowPasswordIcon);\r\n        final EditText phone = findViewById(R.id.phoneNumber);\r\n        final AppCompatButton signUpBtn = findViewById(R.id.signUpBtn);\r\n        final TextView acctSignIn = findViewById(R.id.acctSignInBtn);\r\n        final TextView errorMsg = findViewById(R.id.text_input_error);\r\n\r\n        //methods\r\n        //show or hide password methods\r\n        showPassword.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (passwordShowing) {\r\n                    passwordShowing = false;\r\n                    password.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);\r\n                    showPassword.setImageResource(R.drawable.baseline_remove_red_eye_24);\r\n                } else {\r\n                    passwordShowing = true;\r\n                    password.setInputType(InputType.TYPE_TEXT_VARIATION_VISIBLE_PASSWORD);\r\n                    showPassword.setImageResource(R.drawable.baseline_block_24);\r\n                }\r\n            }\r\n        });\r\n        secondShowPassword.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (confirmPasswordShowing) {\r\n                    confirmPasswordShowing = false;\r\n                    confirmPassword.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);\r\n                    secondShowPassword.setImageResource(R.drawable.baseline_remove_red_eye_24);\r\n                } else {\r\n                    confirmPasswordShowing = true;\r\n                    confirmPassword.setInputType(InputType.TYPE_TEXT_VARIATION_VISIBLE_PASSWORD);\r\n                    secondShowPassword.setImageResource(R.drawable.baseline_block_24);\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        signUpBtn.setOnClickListener(new View.OnClickListener() {\r\n            @SuppressLint(\"SetTextI18n\")\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                //variables for input validation\r\n                boolean isValid = true;\r\n                String strUsername =  username.getText().toString();\r\n                String strEmail =  email.getText().toString();\r\n                String strPassword =  password.getText().toString();\r\n                String strConfirmPassword =  confirmPassword.getText().toString();\r\n                String strPhone =  phone.getText().toString();\r\n\r\n                // Field-specific validations\r\n                if (strUsername.length() > MAX_USER_CHARS) {\r\n                    errorMsg.setText(\"Username must be less than 50 characters\");\r\n                    return;\r\n                }\r\n\r\n               else if (strEmail.length() > MAX_EMAIL_CHARS || !strEmail.contains(\"@\")) {\r\n                    errorMsg.setText(\"Invalid email: Must be less than 50 characters and include an '@' symbol\");\r\n                    return;\r\n                }\r\n\r\n                else if (strPassword.length() < MIN_PASSWORD_CHARS / 2) {\r\n                    errorMsg.setText(\"Password must be at least 8 characters\");\r\n                    return;\r\n                }\r\n\r\n               else if (!strPassword.equals(strConfirmPassword)) {\r\n                    errorMsg.setText(\"Passwords do not match\");\r\n                    return;\r\n                }\r\n\r\n                else if (strPhone.length() != MAX_PHONENUMBER_CHARS || !strPhone.matches(\"\\\\d+\")) {\r\n                    errorMsg.setText(\"Phone number must be exactly 10 digits and contain only numbers\");\r\n                    return;\r\n                }\r\n\r\n                // If all validations pass\r\n                errorMsg.setText(\"Account successfully created. Continue to Login\");\r\n                finish();\r\n\r\n            }\r\n        });\r\n\r\n        acctSignIn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //sends you back to the activity that launched this activity (login_page)\r\n                finish();\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/budgetapp/register.java b/app/src/main/java/com/example/budgetapp/register.java
--- a/app/src/main/java/com/example/budgetapp/register.java	(revision a7941af7ff4c1c6e94c7863a8dc6c1bd1ea07a39)
+++ b/app/src/main/java/com/example/budgetapp/register.java	(date 1742328644464)
@@ -137,7 +137,5 @@
             }
         });
 
-
-
     }
 }
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\" defaultProject=\"true\" />\r\n</project>
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision a7941af7ff4c1c6e94c7863a8dc6c1bd1ea07a39)
+++ b/.idea/vcs.xml	(date 1742328644558)
@@ -1,4 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="VcsDirectoryMappings" defaultProject="true" />
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
 </project>
\ No newline at end of file
